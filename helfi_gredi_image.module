<?php

/**
 * @file
 * Integrates Drupal with Gredi DAM.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\helfi_gredi_image\Service\AssetMetadataHelper;
use Drupal\file\Entity\File;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_theme().
 */
function media_gredidam_theme($existing, $type, $theme, $path) {
  return [
    'checkboxes__gredidam_assets' => [
      'render element' => 'element',
      'template' => 'checkboxes--gredidam-assets',
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function helfi_gredi_image_cron()
{
  /** @var int $last_run */
  $last_run = \Drupal::state()->get('helfi_gredi_image.last_run', 0);
  /** @var int $request_time */
  $request_time = \Drupal::time()->getRequestTime();
  // If 60 minutes passed since last time.
  if (($request_time - $last_run) > 60 * 60 * 24) {
    /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
    $date_formatter = \Drupal::service('date.formatter');
    /** @var \Drupal\helfi_gredi_image\Service\GrediDamClient $gradi_dam_client */
    $gradi_dam_client = \Drupal::service('helfi_gredi_image.dam_client');
    /** @var \Drupal\helfi_gredi_image\Service\AssetMetadataHelper $metadata_helper */
    $metadata_helper = new AssetMetadataHelper($date_formatter, $gradi_dam_client);
    $metadata_helper->populateMetadataUpdateQueue();
    \Drupal::state()->set('helfi_gredi_image.last_run', $request_time);
  }
}

/**
 * Implements hook_form_id_alter().
 */
function helfi_gredi_image_form_media_gredi_dam_assets_edit_form_alter(&$form, FormStateInterface $form_state) {
  $form['field_external_id']['#access'] = FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function helfi_gredi_image_form_user_form_alter(&$form, FormStateInterface $form_state) {
  $form['field_gredi_dam_password']['widget'][0]['value']['#type'] = 'password';
}

/**
 * Edit specific entity browser form. Edit upload image form.
 *
 * Implements hook_form_FORM_ID_alter().
 */
function helfi_gredi_image_form_entity_browser_gredi_dam_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  //dump($form);
  if (isset($form['widget']['upload'])) {
    //dump($form);
    if ($form_state->hasFileElement()) {
      $form['#submit'][] = 'gredi_image_upload_submit';
      //dump($form);
     // dump($form_state);
    }
  }
}

function gredi_image_upload_submit(&$form, FormStateInterface $form_state) {
  //dump($form_state);
  $files = $form_state->getValue('upload');
  $fid = [];
  foreach ($files as $file) {
    if (empty($file)) {
      continue;
    }
    $file_entity = File::load($file);
   // dump($file_entity);
  }

  \Drupal::service('helfi_gredi_image.dam_client')->uploadImage($file_entity);
  //die();
}
